(()=>{var n={208:(n,e,t)=>{"use strict";t.d(e,{A:()=>a});var i=t(354),r=t.n(i),o=t(314),s=t.n(o)()(r());s.push([n.id,"body {\n    height: 95svh;\n    /*border: 2px dashed blue;*/\n    display: flex;\n    flex-direction: column;\n}\n\nheader{\n    align-self: center;\n    font-size: 200%;\n    padding: 1em 1em 1em 1em;\n    text-align: center;\n}\n\ncontainer {\n    /*border: 2px dashed red;*/\n    display: none;\n    flex-wrap: wrap;\n    justify-content: center;\n    height: 100%;\n}\n\ncontainer > div {\n    margin: 1em 1em 1em 1em;\n    width: 30%;\n    /*border: 1px solid greenyellow;*/\n    padding: 1em 1em 1em 1em;\n    display: flex;\n    flex-direction: column;\n    justify-content : center;\n    align-items: center;\n    width: clamp(40px, 50%, 400px) ;\n}\n\n    .player {\n        \n    }\n    .AI {\n    }\n\n        .field {\n            /*border: 1px dashed black;*/\n            height: 20em;\n            width: 20em;\n            display: grid;\n            grid-template-columns: repeat(10, 10%);\n            grid-template-rows: repeat(10, auto);\n        }\n\n        .field > div {\n            border: 1px solid black;\n        }\n        .name {\n            margin: 1em 1em 1em 1em;\n        }\n\n\nfooter{\n    /*border: 1px solid red;*/\n    align-self: center;\n    position: fixed;\n    bottom: 5px;\n    background-color: rgb(159, 235, 235);\n    width: 100vw;\n    height: 30px;\n    text-align: center;\n    text-justify:newspaper;\n}\n\n.positionsboard {\n    background-color: bisque;\n    opacity: 0.9 ;\n    position: absolute;\n    top: 0;\n    width: 95vw;\n    height: 95vh;\n    align-self: center;\n    font-size: 200%;\n    padding: 1em 1em 1em 1em;\n    text-align: center;\n    border: 1px solid red;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n}\n    \n    .positionsboard > div {\n        /*border: 1px solid red;*/\n        width: 95vw;\n        margin: 1rem 1rem 1rem 1rem ;\n    }\n    .positionsboard > button {\n        font-size: xx-large;\n        width: 5vw;\n        height: 5vw;\n    }\n    .positionsboard > .field1 {\n        /*border: 1px dashed greenyellow;*/\n        background-color: white;\n        height: 50vh;\n        width: 50vh;\n        display: grid;\n        grid-template-columns: repeat(10, auto);\n        grid-template-rows: repeat(10, auto);\n    }\n        .field1 > div {\n        border: 1px solid black;\n        background-color: blueviolet;\n        opacity: 1;\n        }\n.red {\n    background-color:aquamarine;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,2BAA2B;IAC3B,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,wBAAwB;IACxB,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,eAAe;IACf,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,uBAAuB;IACvB,UAAU;IACV,iCAAiC;IACjC,wBAAwB;IACxB,aAAa;IACb,sBAAsB;IACtB,wBAAwB;IACxB,mBAAmB;IACnB,+BAA+B;AACnC;;IAEI;;IAEA;IACA;IACA;;QAEI;YACI,4BAA4B;YAC5B,YAAY;YACZ,WAAW;YACX,aAAa;YACb,sCAAsC;YACtC,oCAAoC;QACxC;;QAEA;YACI,uBAAuB;QAC3B;QACA;YACI,uBAAuB;QAC3B;;;AAGR;IACI,yBAAyB;IACzB,kBAAkB;IAClB,eAAe;IACf,WAAW;IACX,oCAAoC;IACpC,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;IACxB,aAAa;IACb,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,wBAAwB;IACxB,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,qBAAqB;AACzB;;IAEI;QACI,yBAAyB;QACzB,WAAW;QACX,4BAA4B;IAChC;IACA;QACI,mBAAmB;QACnB,UAAU;QACV,WAAW;IACf;IACA;QACI,kCAAkC;QAClC,uBAAuB;QACvB,YAAY;QACZ,WAAW;QACX,aAAa;QACb,uCAAuC;QACvC,oCAAoC;IACxC;QACI;QACA,uBAAuB;QACvB,4BAA4B;QAC5B,UAAU;QACV;AACR;IACI,2BAA2B;AAC/B",sourcesContent:["body {\n    height: 95svh;\n    /*border: 2px dashed blue;*/\n    display: flex;\n    flex-direction: column;\n}\n\nheader{\n    align-self: center;\n    font-size: 200%;\n    padding: 1em 1em 1em 1em;\n    text-align: center;\n}\n\ncontainer {\n    /*border: 2px dashed red;*/\n    display: none;\n    flex-wrap: wrap;\n    justify-content: center;\n    height: 100%;\n}\n\ncontainer > div {\n    margin: 1em 1em 1em 1em;\n    width: 30%;\n    /*border: 1px solid greenyellow;*/\n    padding: 1em 1em 1em 1em;\n    display: flex;\n    flex-direction: column;\n    justify-content : center;\n    align-items: center;\n    width: clamp(40px, 50%, 400px) ;\n}\n\n    .player {\n        \n    }\n    .AI {\n    }\n\n        .field {\n            /*border: 1px dashed black;*/\n            height: 20em;\n            width: 20em;\n            display: grid;\n            grid-template-columns: repeat(10, 10%);\n            grid-template-rows: repeat(10, auto);\n        }\n\n        .field > div {\n            border: 1px solid black;\n        }\n        .name {\n            margin: 1em 1em 1em 1em;\n        }\n\n\nfooter{\n    /*border: 1px solid red;*/\n    align-self: center;\n    position: fixed;\n    bottom: 5px;\n    background-color: rgb(159, 235, 235);\n    width: 100vw;\n    height: 30px;\n    text-align: center;\n    text-justify:newspaper;\n}\n\n.positionsboard {\n    background-color: bisque;\n    opacity: 0.9 ;\n    position: absolute;\n    top: 0;\n    width: 95vw;\n    height: 95vh;\n    align-self: center;\n    font-size: 200%;\n    padding: 1em 1em 1em 1em;\n    text-align: center;\n    border: 1px solid red;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    align-content: center;\n}\n    \n    .positionsboard > div {\n        /*border: 1px solid red;*/\n        width: 95vw;\n        margin: 1rem 1rem 1rem 1rem ;\n    }\n    .positionsboard > button {\n        font-size: xx-large;\n        width: 5vw;\n        height: 5vw;\n    }\n    .positionsboard > .field1 {\n        /*border: 1px dashed greenyellow;*/\n        background-color: white;\n        height: 50vh;\n        width: 50vh;\n        display: grid;\n        grid-template-columns: repeat(10, auto);\n        grid-template-rows: repeat(10, auto);\n    }\n        .field1 > div {\n        border: 1px solid black;\n        background-color: blueviolet;\n        opacity: 1;\n        }\n.red {\n    background-color:aquamarine;\n}\n\n"],sourceRoot:""}]);const a=s},314:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var s={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(s[l]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);i&&s[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},354:n=>{"use strict";n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{"use strict";var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var o={},s=[],a=0;a<n.length;a++){var l=n[a],d=i.base?l[0]+i.base:l[0],c=o[d]||0,A="".concat(d," ").concat(c);o[d]=c+1;var u=t(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var h=r(p,i);i.byIndex=a,e.splice(a,0,{identifier:A,updater:h,references:1})}s.push(A)}return s}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=i(n=n||[],r=r||{});return function(n){n=n||[];for(var s=0;s<o.length;s++){var a=t(o[s]);e[a].references--}for(var l=i(n,r),d=0;d<o.length;d++){var c=t(o[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},659:n=>{"use strict";var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{"use strict";n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},306:n=>{n.exports=class{constructor(){this.board=[[null],[null],[null],[null],[null],[null],[null],[null],[null],[null]],this.ships=5,this.allSink=!1;for(let n=0;n<10;n++)for(let e=0;e<10;e++)this.board[n][e]={ship:null,hit:!1}}placeShips(n,e,t){if(e<0||e>10||t<0||t>10)console.log("wrong coordinates !");else for(let i=0;i<n.length;i++)this.board[e][t].ship=n,n.position?t++:e++}receiveAttack(n,e){if(this.board[n][e].ship){let t=this.board[n][e].ship;t.hit,this.board[n][e].hit=!0,t.sunk&&this.ships--,0==this.ships&&this.allSink}else this.board[n][e].hit=!0}}},403:(n,e,t)=>{const i=t(306);n.exports=class{constructor(){this.Board=new i}}},400:n=>{n.exports=class{constructor(n,e){this.name=e,this.length=n,this.hits=0,this.sunk=!1,this.position=!0}hit(){this.hits++,this.length==this.hits&&this.isSunk()}isSunk(){this.sunk=!0}reposition(){1==this.position?this.position=!1:this.position=!0}}},288:n=>{n.exports=function(n){const e=document.querySelectorAll(n);if(e[0])for(let n=0;n<10;n++)for(let t=0;t<10;t++){const i=document.createElement("div");i.id=`p${n}${t}`,e[0].appendChild(i)}if(e[1])for(let n=0;n<10;n++)for(let t=0;t<10;t++){const i=document.createElement("div");i.id=`a${n}${t}`,e[1].appendChild(i)}}},732:n=>{n.exports=class{constructor(n,e=5,t=!0){this.div=n,this.num=e,this.h=t,this.hv=this.h?1:10,this.place=!0}turn(n=this.h){n?(this.h=!1,this.hv=10):(this.h=!0,this.hv=1)}hovering(){const n=document.querySelectorAll(this.div);n.forEach((e=>{e.addEventListener("mouseover",(()=>{if("black"!=e.style.backgroundColor){for(let t=0;t<this.num;t++)if(n[+e.id.substring(1,3)+t*this.hv]&&"black"==n[+e.id.substring(1,3)+t*this.hv].style.backgroundColor)return void(this.place=!1);e.style.backgroundColor="greenyellow";for(let t=0;t<this.num;t++)if(n[+e.id.substring(1,3)+t*this.hv]&&(+e.id.substring(1,3)+t<10*e.id.substring(1,2)+10||!this.h))n[+e.id.substring(1,3)+t*this.hv].style.backgroundColor="greenyellow",this.place=!0;else if(n[+e.id.substring(1,3)+t*this.hv])for(let t=0;t<this.num;t++)n[+e.id.substring(1,3)+t*this.hv]&&+e.id.substring(1,3)+t<10*e.id.substring(1,2)+10&&(n[+e.id.substring(1,3)+t].style.backgroundColor="red",this.place=!1);else for(let t=0;t<this.num;t++)n[+e.id.substring(1,3)+t*this.hv]&&(n[+e.id.substring(1,3)+t*this.hv].style.backgroundColor="red",this.place=!1)}else this.place=!1}),!0)})),n.forEach((e=>e.addEventListener("mouseout",(()=>{if("black"!=e.style.backgroundColor){for(let t=0;t<this.num;t++)if(n[+e.id.substring(1,3)+t*this.hv]&&"black"==n[+e.id.substring(1,3)+t*this.hv].style.backgroundColor)return;if("black"!=e.style.backgroundColor){e.style.backgroundColor="blueviolet";for(let t=0;t<this.num;t++)n[+e.id.substring(1,3)+t*this.hv]&&(+e.id.substring(1,3)+t<10*e.id.substring(1,2)+10||!this.h)&&(n[+e.id.substring(1,3)+t*this.hv].style.backgroundColor="blueviolet")}}}))))}}},214:(n,e,t)=>{const i=t(288),r=t(732),o=t(403),s=t(400);let a=new s(5,"carrieer"),l=new s(4,"battleship"),d=new s(3,"cruiser"),c=new s(3,"submarine"),A=new s(2,"destroyer"),u=a,p=new o,h=new r(".field1 > div",5,!0);const f=document.querySelector(".positionsboard"),m=document.querySelector("container"),b=document.querySelector(".positionsboard > div > span");n.exports=function(){i(".field"),i(".field1");const n=document.querySelector("button"),e=document.querySelectorAll(".field1 > div");h.hovering(),n.addEventListener("click",(()=>{u.reposition(),console.log(u.position),h.turn(!u.position),console.log(h.h),h.num=u.length,h.hovering()})),console.log(e),e.forEach((n=>{n.addEventListener("click",(()=>{h.place&&(p.Board.placeShips(u,n.id.substring(1,2),n.id.substring(2,3)),function(n,e){for(let t=0;t<10;t++)for(let i=0;i<10;i++)n[t][i].ship?e[10*t+i].style.backgroundColor="black":e[10*t+i].style.backgroundColor=""}(p.Board.board,e),function(){switch(u){case a:u=l;break;case l:u=d;break;case d:u=c;break;case c:u=A;break;default:f.style.display="none",m.style.display="flex"}}(),h.turn(!u.position),h.h=u.position,h.num=u.length,b.textContent=u.name)}))}))}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={id:i,exports:{}};return n[i](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{"use strict";var n=t(72),e=t.n(n),i=t(825),r=t.n(i),o=t(659),s=t.n(o),a=t(56),l=t.n(a),d=t(540),c=t.n(d),A=t(113),u=t.n(A),p=t(208),h={};h.styleTagTransform=u(),h.setAttributes=l(),h.insert=s().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=c(),e()(p.A,h),p.A&&p.A.locals&&p.A.locals,t(214)()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,